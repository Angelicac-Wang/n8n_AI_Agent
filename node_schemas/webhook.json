{
  "name": "n8n-nodes-base.webhook",
  "displayName": "Webhook",
  "description": "Starts the workflow when a webhook is called",
  "properties": [
    {
      "displayName": "Allow Multiple HTTP Methods",
      "name": "multipleMethods",
      "type": "boolean",
      "default": false,
      "isNodeSetting": true,
      "description": "Whether to allow the webhook to listen for multiple HTTP methods"
    },
    {
      "displayName": "HTTP Method",
      "name": "httpMethod",
      "type": "options",
      "options": [
        {
          "name": "DELETE",
          "value": "DELETE"
        },
        {
          "name": "GET",
          "value": "GET"
        },
        {
          "name": "HEAD",
          "value": "HEAD"
        },
        {
          "name": "PATCH",
          "value": "PATCH"
        },
        {
          "name": "POST",
          "value": "POST"
        },
        {
          "name": "PUT",
          "value": "PUT"
        }
      ],
      "default": "GET",
      "description": "The HTTP method to listen to",
      "displayOptions": {
        "show": {
          "multipleMethods": [
            false
          ]
        }
      }
    },
    {
      "displayName": "HTTP Methods",
      "name": "httpMethod",
      "type": "multiOptions",
      "options": [
        {
          "name": "DELETE",
          "value": "DELETE"
        },
        {
          "name": "GET",
          "value": "GET"
        },
        {
          "name": "HEAD",
          "value": "HEAD"
        },
        {
          "name": "PATCH",
          "value": "PATCH"
        },
        {
          "name": "POST",
          "value": "POST"
        },
        {
          "name": "PUT",
          "value": "PUT"
        }
      ],
      "default": [
        "GET",
        "POST"
      ],
      "description": "The HTTP methods to listen to",
      "displayOptions": {
        "show": {
          "multipleMethods": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Path",
      "name": "path",
      "type": "string",
      "default": "",
      "placeholder": "webhook",
      "description": "The path to listen to, dynamic values could be specified by using ':', e.g. 'your-path/:dynamic-value'. If dynamic values are set 'webhookId' would be prepended to path."
    },
    {
      "displayName": "Authentication",
      "name": "authentication",
      "type": "options",
      "options": [
        {
          "name": "Basic Auth",
          "value": "basicAuth"
        },
        {
          "name": "Header Auth",
          "value": "headerAuth"
        },
        {
          "name": "JWT Auth",
          "value": "jwtAuth"
        },
        {
          "name": "None",
          "value": "none"
        }
      ],
      "default": "none",
      "description": "The way to authenticate"
    },
    {
      "displayName": "Respond",
      "name": "responseMode",
      "type": "options",
      "options": [
        {
          "name": "Immediately",
          "value": "onReceived",
          "description": "As soon as this node executes"
        },
        {
          "name": "When Last Node Finishes",
          "value": "lastNode",
          "description": "Returns data of the last-executed node"
        },
        {
          "name": "Using 'Respond to Webhook' Node",
          "value": "responseNode",
          "description": "Response defined in that node"
        }
      ],
      "default": "onReceived",
      "description": "When and how to respond to the webhook",
      "displayOptions": {
        "show": {
          "@version": [
            1,
            1.1,
            2
          ]
        }
      }
    },
    {
      "displayName": "Respond",
      "name": "responseMode",
      "type": "options",
      "options": [
        {
          "name": "Immediately",
          "value": "onReceived",
          "description": "As soon as this node executes"
        },
        {
          "name": "When Last Node Finishes",
          "value": "lastNode",
          "description": "Returns data of the last-executed node"
        },
        {
          "name": "Using 'Respond to Webhook' Node",
          "value": "responseNode",
          "description": "Response defined in that node"
        },
        {
          "name": "Streaming Response",
          "value": "streaming",
          "description": "Returns data in real time from streaming enabled nodes"
        }
      ],
      "default": "onReceived",
      "description": "When and how to respond to the webhook",
      "displayOptions": {
        "hide": {
          "@version": [
            1,
            1.1,
            2
          ]
        }
      }
    },
    {
      "displayName": "Insert a 'Respond to Webhook' node to control when and how you respond. <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.respondtowebhook/\" target=\"_blank\">More details</a>",
      "name": "webhookNotice",
      "type": "notice",
      "displayOptions": {
        "show": {
          "responseMode": [
            "responseNode"
          ]
        }
      },
      "default": ""
    },
    {
      "displayName": "Insert a node that supports streaming (e.g. 'AI Agent') and enable streaming to stream directly to the response while the workflow is executed. <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.respondtowebhook/\" target=\"_blank\">More details</a>",
      "name": "webhookStreamingNotice",
      "type": "notice",
      "displayOptions": {
        "show": {
          "responseMode": [
            "streaming"
          ]
        }
      },
      "default": ""
    },
    {
      "displayName": "Response Code",
      "name": "responseCode",
      "type": "number",
      "displayOptions": {
        "show": {
          "@version": [
            1,
            1.1
          ]
        },
        "hide": {
          "responseMode": [
            "responseNode"
          ]
        }
      },
      "typeOptions": {
        "minValue": 100,
        "maxValue": 599
      },
      "default": 200,
      "description": "The HTTP Response code to return"
    },
    {
      "displayName": "Response Data",
      "name": "responseData",
      "type": "options",
      "displayOptions": {
        "show": {
          "responseMode": [
            "lastNode"
          ]
        }
      },
      "options": [
        {
          "name": "All Entries",
          "value": "allEntries",
          "description": "Returns all the entries of the last node. Always returns an array."
        },
        {
          "name": "First Entry JSON",
          "value": "firstEntryJson",
          "description": "Returns the JSON data of the first entry of the last node. Always returns a JSON object."
        },
        {
          "name": "First Entry Binary",
          "value": "firstEntryBinary",
          "description": "Returns the binary data of the first entry of the last node. Always returns a binary file."
        },
        {
          "name": "No Response Body",
          "value": "noData",
          "description": "Returns without a body"
        }
      ],
      "default": "firstEntryJson",
      "description": "What data should be returned. If it should return all items as an array or only the first item as object."
    },
    {
      "displayName": "Property Name",
      "name": "responseBinaryPropertyName",
      "type": "string",
      "required": true,
      "default": "data",
      "displayOptions": {
        "show": {
          "responseData": [
            "firstEntryBinary"
          ]
        }
      },
      "description": "Name of the binary property to return"
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Allowed Origins (CORS)",
          "name": "allowedOrigins",
          "type": "string",
          "default": "*",
          "description": "Comma-separated list of URLs allowed for cross-origin non-preflight requests. Use * (default) to allow all origins."
        },
        {
          "displayName": "Binary File",
          "name": "binaryData",
          "type": "boolean",
          "displayOptions": {
            "show": {
              "/httpMethod": [
                "PATCH",
                "PUT",
                "POST"
              ],
              "@version": [
                1
              ]
            }
          },
          "default": false,
          "description": "Whether the webhook will receive binary data"
        },
        {
          "displayName": "Field Name for Binary Data",
          "name": "binaryPropertyName",
          "type": "string",
          "default": "data",
          "displayOptions": {
            "hide": {
              "@version": [
                1
              ]
            }
          },
          "description": "The name of the output field to put any binary file data in. Only relevant if binary data is received."
        },
        {
          "displayName": "Ignore Bots",
          "name": "ignoreBots",
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore requests from bots like link previewers and web crawlers"
        },
        {
          "displayName": "IP(s) Whitelist",
          "name": "ipWhitelist",
          "type": "string",
          "placeholder": "e.g. 127.0.0.1",
          "default": "",
          "description": "Comma-separated list of allowed IP addresses. Leave empty to allow all IPs."
        },
        {
          "displayName": "No Response Body",
          "name": "noResponseBody",
          "type": "boolean",
          "default": false,
          "description": "Whether to send any body in the response",
          "displayOptions": {
            "hide": {
              "rawBody": [
                true
              ]
            },
            "show": {
              "/responseMode": [
                "onReceived"
              ]
            }
          }
        },
        {
          "displayName": "Property Name",
          "name": "responsePropertyName",
          "type": "string",
          "displayOptions": {
            "show": {
              "/responseData": [
                "firstEntryJson"
              ],
              "/responseMode": [
                "lastNode"
              ]
            }
          },
          "default": "data",
          "description": "Name of the property to return the data of instead of the whole JSON"
        },
        {
          "displayName": "Put Output File in Field",
          "name": "binaryPropertyName",
          "type": "string",
          "default": "data",
          "displayOptions": {
            "show": {
              "binaryData": [
                true
              ],
              "@version": [
                1
              ]
            }
          },
          "hint": "The name of the output binary field to put the file in",
          "description": "If the data gets received via \"Form-Data Multipart\" it will be the prefix and a number starting with 0 will be attached to it"
        },
        {
          "displayName": "Raw Body",
          "name": "rawBody",
          "type": "boolean",
          "displayOptions": {
            "show": {
              "@version": [
                1
              ]
            },
            "hide": {
              "binaryData": [
                true
              ],
              "noResponseBody": [
                true
              ]
            }
          },
          "default": false,
          "description": "Raw body (binary)"
        },
        {
          "displayName": "Raw Body",
          "name": "rawBody",
          "type": "boolean",
          "displayOptions": {
            "hide": {
              "noResponseBody": [
                true
              ],
              "@version": [
                1
              ]
            }
          },
          "default": false,
          "description": "Whether to return the raw body"
        },
        {
          "displayName": "Response Code",
          "name": "responseCode",
          "placeholder": "Add Response Code",
          "type": "fixedCollection",
          "default": {
            "values": {
              "responseCode": 200
            }
          },
          "options": [
            {
              "name": "values",
              "displayName": "Values",
              "values": [
                {
                  "displayName": "Response Code",
                  "name": "responseCode",
                  "type": "options",
                  "options": [
                    {
                      "name": "200",
                      "value": 200,
                      "description": "OK - Request has succeeded"
                    },
                    {
                      "name": "201",
                      "value": 201,
                      "description": "Created - Request has been fulfilled"
                    },
                    {
                      "name": "204",
                      "value": 204,
                      "description": "No Content - Request processed, no content returned"
                    },
                    {
                      "name": "301",
                      "value": 301,
                      "description": "Moved Permanently - Requested resource moved permanently"
                    },
                    {
                      "name": "302",
                      "value": 302,
                      "description": "Found - Requested resource moved temporarily"
                    },
                    {
                      "name": "304",
                      "value": 304,
                      "description": "Not Modified - Resource has not been modified"
                    },
                    {
                      "name": "400",
                      "value": 400,
                      "description": "Bad Request - Request could not be understood"
                    },
                    {
                      "name": "401",
                      "value": 401,
                      "description": "Unauthorized - Request requires user authentication"
                    },
                    {
                      "name": "403",
                      "value": 403,
                      "description": "Forbidden - Server understood, but refuses to fulfill"
                    },
                    {
                      "name": "404",
                      "value": 404,
                      "description": "Not Found - Server has not found a match"
                    },
                    {
                      "name": "Custom Code",
                      "value": "customCode",
                      "description": "Write any HTTP code"
                    }
                  ],
                  "default": 200,
                  "description": "The HTTP response code to return"
                },
                {
                  "displayName": "Code",
                  "name": "customCode",
                  "type": "number",
                  "default": 200,
                  "placeholder": "e.g. 400",
                  "typeOptions": {
                    "minValue": 100
                  },
                  "displayOptions": {
                    "show": {
                      "responseCode": [
                        "customCode"
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "displayOptions": {
            "show": {
              "@version": [
                {
                  "_cnd": {
                    "gte": 2
                  }
                }
              ]
            },
            "hide": {
              "/responseMode": [
                "responseNode"
              ]
            }
          }
        },
        {
          "displayName": "Response Content-Type",
          "name": "responseContentType",
          "type": "string",
          "displayOptions": {
            "show": {
              "/responseData": [
                "firstEntryJson"
              ],
              "/responseMode": [
                "lastNode"
              ]
            }
          },
          "default": "",
          "placeholder": "application/xml",
          "description": "Set a custom content-type to return if another one as the \"application/json\" should be returned"
        },
        {
          "displayName": "Response Data",
          "name": "responseData",
          "type": "string",
          "displayOptions": {
            "show": {
              "/responseMode": [
                "onReceived"
              ]
            },
            "hide": {
              "noResponseBody": [
                true
              ]
            }
          },
          "default": "",
          "placeholder": "success",
          "description": "Custom response data to send"
        },
        {
          "displayName": "Response Headers",
          "name": "responseHeaders",
          "placeholder": "Add Response Header",
          "description": "Add headers to the webhook response",
          "type": "fixedCollection",
          "typeOptions": {
            "multipleValues": true
          },
          "default": {},
          "options": [
            {
              "name": "entries",
              "displayName": "Entries",
              "values": [
                {
                  "displayName": "Name",
                  "name": "name",
                  "type": "string",
                  "default": "",
                  "description": "Name of the header"
                },
                {
                  "displayName": "Value",
                  "name": "value",
                  "type": "string",
                  "default": "",
                  "description": "Value of the header"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}