{
  "name": "@n8n/n8n-nodes-langchain.toolCode",
  "displayName": "Code Tool",
  "description": "Write a tool in JS or Python",
  "properties": [
    {
      "displayName": "This node must be connected to an AI agent. <a data-action='openSelectiveNodeCreator' data-action-parameter-creatorview='AI'>Insert one</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "typeOptions": {
        "containerClass": "ndv-connection-hint-notice"
      }
    },
    {
      "displayName": "See an example of a conversational agent with custom tool written in JavaScript <a href=\"/templates/1963\" target=\"_blank\">here</a>.",
      "name": "noticeTemplateExample",
      "type": "notice",
      "default": ""
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "default": "",
      "placeholder": "My_Tool",
      "displayOptions": {
        "show": {
          "@version": [
            1
          ]
        }
      }
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "default": "",
      "placeholder": "e.g. My_Tool",
      "validateType": "string-alphanumeric",
      "description": "The name of the function to be called, could contain letters, numbers, and underscores only",
      "displayOptions": {
        "show": {
          "@version": [
            1.1
          ]
        }
      }
    },
    {
      "displayName": "Description",
      "name": "description",
      "type": "string",
      "default": "",
      "placeholder": "Call this tool to get a random color. The input should be a string with comma separted names of colors to exclude.",
      "typeOptions": {
        "rows": 3
      }
    },
    {
      "displayName": "Language",
      "name": "language",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "JavaScript",
          "value": "javaScript"
        },
        {
          "name": "Python (Beta)",
          "value": "python"
        }
      ],
      "default": "javaScript"
    },
    {
      "displayName": "JavaScript",
      "name": "jsCode",
      "type": "string",
      "displayOptions": {
        "show": {
          "language": [
            "javaScript"
          ]
        }
      },
      "typeOptions": {
        "editor": "jsEditor"
      },
      "default": "// Example: convert the incoming query to uppercase and return it\nreturn query.toUpperCase()",
      "hint": "You can access the input the tool receives via the input property \"query\". The returned value should be a single string.",
      "description": "E.g. Converts any text to uppercase",
      "noDataExpression": true
    },
    {
      "displayName": "Python",
      "name": "pythonCode",
      "type": "string",
      "displayOptions": {
        "show": {
          "language": [
            "python"
          ]
        }
      },
      "typeOptions": {
        "editor": "codeNodeEditor",
        "editorLanguage": "python"
      },
      "default": "# Example: convert the incoming query to uppercase and return it\nreturn query.upper()",
      "hint": "You can access the input the tool receives via the input property \"query\". The returned value should be a single string.",
      "description": "E.g. Converts any text to uppercase",
      "noDataExpression": true
    },
    {
      "displayName": "Specify Input Schema",
      "name": "specifyInputSchema",
      "type": "boolean",
      "description": "Whether to specify the schema for the function. This would require the LLM to provide the input in the correct format and would validate it against the schema.",
      "noDataExpression": true,
      "default": false
    },
    {
      "displayName": "Schema Type",
      "name": "schemaType",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Generate From JSON Example",
          "value": "fromJson",
          "description": "Generate a schema from an example JSON object"
        },
        {
          "name": "Define using JSON Schema",
          "value": "manual",
          "description": "Define the JSON schema manually"
        }
      ],
      "default": "fromJson",
      "description": "How to specify the schema for the function",
      "displayOptions": {
        "show": {
          "specifyInputSchema": [
            true
          ]
        }
      }
    },
    {
      "displayName": "JSON Example",
      "name": "jsonSchemaExample",
      "type": "json",
      "default": "{\n\t\"some_input\": \"some_value\"\n}",
      "noDataExpression": true,
      "typeOptions": {
        "rows": 10
      },
      "displayOptions": {
        "show": {
          "specifyInputSchema": [
            true
          ],
          "schemaType": [
            "fromJson"
          ]
        }
      },
      "description": "Example JSON object to use to generate the schema"
    },
    {
      "displayName": "All properties will be required. To make them optional, use the 'JSON Schema' schema type instead",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "specifyInputSchema": [
            true
          ],
          "@version": [
            {
              "_cnd": {
                "gte": 1.3
              }
            }
          ],
          "schemaType": [
            "fromJson"
          ]
        }
      }
    },
    {
      "displayName": "Input Schema",
      "name": "inputSchema",
      "type": "json",
      "default": "{\n\"type\": \"object\",\n\"properties\": {\n\t\"some_input\": {\n\t\t\"type\": \"string\",\n\t\t\"description\": \"Some input to the function\"\n\t\t}\n\t}\n}",
      "noDataExpression": false,
      "typeOptions": {
        "rows": 10
      },
      "displayOptions": {
        "show": {
          "specifyInputSchema": [
            true
          ],
          "schemaType": [
            "manual"
          ]
        }
      },
      "description": "Schema to use for the function",
      "hint": "Use <a target=\"_blank\" href=\"https://json-schema.org/\">JSON Schema</a> format (<a target=\"_blank\" href=\"https://json-schema.org/learn/miscellaneous-examples.html\">examples</a>). $refs syntax is currently not supported."
    }
  ]
}