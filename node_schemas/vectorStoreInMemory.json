{
  "name": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
  "displayName": "Simple Vector Store",
  "description": "The easiest way to experiment with vector stores, without external setup.",
  "properties": [
    {
      "displayName": "Tip: Get a feel for vector stores in n8n with our",
      "name": "ragStarterCallout",
      "type": "callout",
      "typeOptions": {
        "calloutAction": {
          "label": "RAG starter template",
          "type": "openSampleWorkflowTemplate",
          "templateId": "rag-starter-template"
        }
      },
      "default": ""
    },
    {
      "displayName": "Operation Mode",
      "name": "mode",
      "type": "options",
      "noDataExpression": true,
      "default": "retrieve",
      "options": [
        {
          "name": "Get Many",
          "value": "load",
          "description": "Get many ranked documents from vector store for query",
          "action": "Get ranked documents from vector store"
        },
        {
          "name": "Insert Documents",
          "value": "insert",
          "description": "Insert documents into vector store",
          "action": "Add documents to vector store"
        },
        {
          "name": "Retrieve Documents (As Vector Store for Chain/Tool)",
          "value": "retrieve",
          "description": "Retrieve documents from vector store to be used as vector store with AI nodes",
          "action": "Retrieve documents for Chain/Tool as Vector Store",
          "outputConnectionType": "ai_vectorStore"
        },
        {
          "name": "Retrieve Documents (As Tool for AI Agent)",
          "value": "retrieve-as-tool",
          "description": "Retrieve documents from vector store to be used as tool with AI nodes",
          "action": "Retrieve documents for AI Agent as Tool",
          "outputConnectionType": "ai_tool"
        }
      ]
    },
    {
      "displayName": "This node must be connected to a vector store retriever. <a data-action='openSelectiveNodeCreator' data-action-parameter-connectiontype='ai_retriever'>Insert one</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "typeOptions": {
        "containerClass": "ndv-connection-hint-notice"
      },
      "displayOptions": {
        "show": {
          "mode": [
            "retrieve"
          ]
        }
      }
    },
    {
      "displayName": "Name",
      "name": "toolName",
      "type": "string",
      "default": "",
      "required": true,
      "description": "Name of the vector store",
      "placeholder": "e.g. company_knowledge_base",
      "validateType": "string-alphanumeric",
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "lte": 1.2
              }
            }
          ],
          "mode": [
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Description",
      "name": "toolDescription",
      "type": "string",
      "default": "",
      "required": true,
      "typeOptions": {
        "rows": 2
      },
      "description": "Explain to the LLM what this tool does, a good, specific description would allow LLMs to produce expected results much more often",
      "placeholder": "e.g. The easiest way to experiment with vector stores, without external setup.",
      "displayOptions": {
        "show": {
          "mode": [
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Memory Key",
      "name": "memoryKey",
      "type": "string",
      "default": "vector_store_key",
      "description": "The key to use to store the vector memory in the workflow data. The key will be prefixed with the workflow ID to avoid collisions.",
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "lte": 1.1
              }
            }
          ]
        }
      }
    },
    {
      "displayName": "Memory Key",
      "name": "memoryKey",
      "type": "resourceLocator",
      "required": true,
      "default": {
        "mode": "list",
        "value": "vector_store_key"
      },
      "description": "The key to use to store the vector memory in the workflow data. These keys are shared between workflows.",
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "gte": 1.2
              }
            }
          ]
        }
      },
      "modes": [
        {
          "displayName": "From List",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "vectorStoresSearch",
            "searchable": true,
            "allowNewResource": {
              "label": "resourceLocator.mode.list.addNewResource.vectorStoreInMemory",
              "defaultName": "vector_store_key",
              "method": "createVectorStore"
            }
          }
        },
        {
          "displayName": "Manual",
          "name": "id",
          "type": "string",
          "placeholder": "vector_store_key"
        }
      ]
    },
    {
      "displayName": "Embedding Batch Size",
      "name": "embeddingBatchSize",
      "type": "number",
      "default": 200,
      "description": "Number of documents to embed in a single batch",
      "displayOptions": {
        "show": {
          "mode": [
            "insert"
          ],
          "@version": [
            {
              "_cnd": {
                "gte": 1.1
              }
            }
          ]
        }
      }
    },
    {
      "displayName": "Clear Store",
      "name": "clearStore",
      "type": "boolean",
      "default": false,
      "description": "Whether to clear the store before inserting new data",
      "displayOptions": {
        "show": {
          "mode": [
            "insert"
          ]
        }
      }
    },
    {
      "displayName": "<strong>For experimental use only</strong>: Data is stored in memory and will be lost if n8n restarts. Data may also be cleared if available memory gets low, and is accessible to all users of this instance. <a href=\"https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/\">More info</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "mode": [
            "insert"
          ]
        }
      }
    },
    {
      "displayName": "Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "required": true,
      "description": "Search prompt to retrieve matching documents from the vector store using similarity-based ranking",
      "displayOptions": {
        "show": {
          "mode": [
            "load"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "topK",
      "type": "number",
      "default": 4,
      "description": "Number of top results to fetch from vector store",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Include Metadata",
      "name": "includeDocumentMetadata",
      "type": "boolean",
      "default": true,
      "description": "Whether or not to include document metadata",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Rerank Results",
      "name": "useReranker",
      "type": "boolean",
      "default": false,
      "description": "Whether or not to rerank results",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "ID",
      "name": "id",
      "type": "string",
      "default": "",
      "required": true,
      "description": "ID of an embedding entry",
      "displayOptions": {
        "show": {
          "mode": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "<strong>For experimental use only</strong>: Data is stored in memory and will be lost if n8n restarts. Data may also be cleared if available memory gets low, and is accessible to all users of this instance. <a href=\"https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/\">More info</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "<strong>For experimental use only</strong>: Data is stored in memory and will be lost if n8n restarts. Data may also be cleared if available memory gets low, and is accessible to all users of this instance. <a href=\"https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/\">More info</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "mode": [
            "retrieve"
          ]
        }
      }
    }
  ]
}