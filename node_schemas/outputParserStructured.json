{
  "name": "@n8n/n8n-nodes-langchain.outputParserStructured",
  "displayName": "Structured Output Parser",
  "description": "Return data in a defined JSON format",
  "properties": [
    {
      "displayName": "This node must be connected to an AI chain. <a data-action='openSelectiveNodeCreator' data-action-parameter-creatorview='AI'>Insert one</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "typeOptions": {
        "containerClass": "ndv-connection-hint-notice"
      }
    },
    {
      "displayName": "Schema Type",
      "name": "schemaType",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Generate From JSON Example",
          "value": "fromJson",
          "description": "Generate a schema from an example JSON object"
        },
        {
          "name": "Define using JSON Schema",
          "value": "manual",
          "description": "Define the JSON schema manually"
        }
      ],
      "default": "fromJson",
      "description": "How to specify the schema for the function",
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "gte": 1.2
              }
            }
          ]
        }
      }
    },
    {
      "displayName": "JSON Example",
      "name": "jsonSchemaExample",
      "type": "json",
      "default": "{\n\t\"state\": \"California\",\n\t\"cities\": [\"Los Angeles\", \"San Francisco\", \"San Diego\"]\n}",
      "noDataExpression": true,
      "typeOptions": {
        "rows": 10
      },
      "displayOptions": {
        "show": {
          "schemaType": [
            "fromJson"
          ]
        }
      },
      "description": "Example JSON object to use to generate the schema"
    },
    {
      "displayName": "All properties will be required. To make them optional, use the 'JSON Schema' schema type instead",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "gte": 1.3
              }
            }
          ],
          "schemaType": [
            "fromJson"
          ]
        }
      }
    },
    {
      "displayName": "Input Schema",
      "name": "inputSchema",
      "type": "json",
      "default": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"state\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"cities\": {\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t}\n}",
      "noDataExpression": false,
      "typeOptions": {
        "rows": 10
      },
      "displayOptions": {
        "show": {
          "schemaType": [
            "manual"
          ]
        }
      },
      "description": "Schema to use for the function",
      "hint": "Use <a target=\"_blank\" href=\"https://json-schema.org/\">JSON Schema</a> format (<a target=\"_blank\" href=\"https://json-schema.org/learn/miscellaneous-examples.html\">examples</a>). $refs syntax is currently not supported."
    },
    {
      "displayName": "JSON Schema",
      "name": "jsonSchema",
      "type": "json",
      "description": "JSON Schema to structure and validate the output against",
      "default": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"state\": {\n      \"type\": \"string\"\n    },\n    \"cities\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}",
      "typeOptions": {
        "rows": 10
      },
      "required": true,
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "lte": 1.1
              }
            }
          ]
        }
      }
    },
    {
      "displayName": "Auto-Fix Format",
      "description": "Whether to automatically fix the output when it is not in the correct format. Will cause another LLM call.",
      "name": "autoFix",
      "type": "boolean",
      "default": false
    },
    {
      "displayName": "Customize Retry Prompt",
      "name": "customizeRetryPrompt",
      "type": "boolean",
      "displayOptions": {
        "show": {
          "autoFix": [
            true
          ]
        }
      },
      "default": false,
      "description": "Whether to customize the prompt used for retrying the output parsing. If disabled, a default prompt will be used."
    },
    {
      "displayName": "Custom Prompt",
      "name": "prompt",
      "type": "string",
      "displayOptions": {
        "show": {
          "autoFix": [
            true
          ],
          "customizeRetryPrompt": [
            true
          ]
        }
      },
      "default": "Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:",
      "typeOptions": {
        "rows": 10
      },
      "hint": "Should include \"{error}\", \"{instructions}\", and \"{completion}\" placeholders",
      "description": "Prompt template used for fixing the output. Uses placeholders: \"{instructions}\" for parsing rules, \"{completion}\" for the failed attempt, and \"{error}\" for the validation error message."
    }
  ]
}